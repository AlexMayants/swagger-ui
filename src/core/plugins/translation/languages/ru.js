export default {
  addItem: "Добавить пункт",
  cancel: "Отменить",
  clear: "Очистить",
  close: "Закрыть",
  download: "Скачать",
  downloadFile: "Скачать файл",
  edit: "Редактировать",
  editValue: "Редактировать значение",
  execute: "Выполнить",
  explore: "Просмотреть",
  hide: "Скрыть",
  reset: "Сбросить",
  show: "Показать",
  tryItOut: "Попробовать",
  auth: {
    authorize: "Авторизоваться",
    authorized: "Авторизован",
    availableAuthorizations: "Доступные авторизации",

    logout: "Выйти",
    scopesDescription: "Уровни доступа используются, чтобы давать приложениям разные права на доступ к данным от имени конечного пользователя. В API может быть определён один или несколько уровней доступа.",
    scopesDescription2: "API требуются следующие уровни доступа. Выберите те, которые хотите предоставить Swagger UI.",
    apiKey: {
      title: "apiKey",
      name: "Имя:",
      in: "В поле:",
      value: "Значение:",
    },
    basic: {
      title: "Базовая авторизация",
      username: "Имя пользователя:",
      password: "Пароль:",
      scheme: "http, Базовая"
    },
    bearer: {
      value: "Значение:",
      scheme: "http, Bearer"
    },
    oauth2: {
      title: "OAuth2",
      application: "Приложение:",
      authorizationUrl: "URL авторизации:",
      tokenUrl: "URL токена:",
      flow: "Flow:",
      username: "username:",
      password: "password:",
      credentialsLocation: "Расположение учётных данных клиента:",
      authHeader: "Заголовок авторизации",
      requestBody: "Тело запроса",
      clientId: "client_id:",
      clientSecret: "client_secret:",
      scopes: "Уровни доступа:",
    },
    unknownType: "Неизвестный тип определения безопасности {{type}}",
    unsupportedScheme: {
      1: "HTTP-аутентификация ",
      2: ": неподдерживаемая схема {{scheme}}"
    },
  },
  callbacks: {
    title: "Коллбеки",
    no: "Нет коллбеков",
  },
  definitions: {
    select: "Выберите спецификацию",
  },
  errors: {
    header: "Ошибки",
    atPath: "в {{path}}",
    onLine: "в строке {{line}}",
    jumpToLine: "Перейти к строке {{line}}",
    loadDefinition: "Не удалось загрузить описание API.",
    loadRemoteConfig: "Не удалось загрузить удалённую конфигурацию.",
    noDefinition: "Не задано описание API.",
  },
  examples: {
    unavailable: {
      1: "Примеры значений недоступны для типов содержимого ",
      2: ".",
    },
  },
  filters: {
    placeholder: "Фильтр по тегу",
  },
  headers: {
    title: "Заголовки:",
    name: "Название",
    description: "Описание",
    type: "Тип",
  },
  info: {
    termsOfService: "Условия использования",
    developer: "разработчик",
    website: "{{ name }} - Веб-сайт",
    sendEmail: "Отправить email {{name}}",
    contact: "Связаться с {{name}}",
    baseUrl: "Базовый URL:",
  },
  models: {
    models: "Модели",
    schemas: "Схемы",
    model: "Модель",
    schema: "Схема",
    description: "описание:",
    enum: "Перечисление:",
    deprecated: "Устарело:",
    exampleValue: "Пример значения",
  },
  operations: {
    linkTitle: "Операция `{{name}}`",
    linkParameters: "Параметры `{{parameters}}`",
    moreDetails: "Подробнее",
    deprecated: "Внимание: Устарело",
    noDefined: "В спецификации не опрееделено ни одной операции!",
    extensions: "Расширения",
    field: "Поле",
    value: "Значение",
    expand: "Развернуть операцию",
    collapse: "Свернуть операцию",
  },
  parameters: {
    title: "Параметры",
    no: "Нет параметров",
    name: "Название",
    description: "Описание",
    sendEmptyValue: "Отправить пустое значение",
    contentType: "content-type параметра",
    availableValues: "Доступные значения:",
    defaultValue: "Значение по умолчанию:",
    deprecated: "устарело",
    formDataUnsupported: "Ошибка: ваш браузер не поддерживает FormData",
  },
  properties: {
    example: "пример:",
    xml: "xml:",
  },
  request: {
    url: "URL запроса",
    duration: "Длительность запроса",
    ms: "{{duration}} мс",
    body: "Тело запроса",
    curl: "Curl",
  },
  response: {
    responses: "Ответы сервера",
    contentType: "content-type ответа",
    headers: "Заголовки ответа",
    code: "Код",
    description: "Описание",
    links: "Ссылки",
    noLinks: "Нет ссылок",
    controlsAcceptHeader: {
      1: "Управляет заголовком ",
      2: ".",
    },
    serverResponse: "Ответ сервера",
    details: "Подробности",
    body: "Тело ответа",
    displayingAsText: "Неопознанный тип ответа; содержимое отображается как текст.",
    unableToDisplay: "Неопознанный тип ответа; невозможно отобразить.",
    blobUnsupported: "Обнаружены заголовки загрузки, но ваш браузер не поддерживает загрузку двоичных данных с помощью XHR (Blob).",
    undocumented: "Не задокументировано",
  },
  schemes: {
    schemes: "Протоколы",
  },
  servers: {
    title: "Серверы",
    override: "Эти настройки уровня {{level}} переопределяют глобальные настройки сервера.",
    ofLevel: {
      operation: "операции",
      path: "пути",
    },
    computedUrl: "Вычисленный URL:",
    variables: "Переменные сервера",
  },
  validator: {
    title: "Значок онлайн-валидации",
    error: "Ошибка",
  },
  versionPragma: {
    header: "Невозможно отобразать это описание",
    noValidVersion: "В заданном описании не указано допустимое значение поля версии.",
    conflict: {
      1: "Поля ",
      2: " и ",
      3: " не могут присутствовать в одном и том же описании Swagger или OpenAPI. Пожалуйста, удалите одно из полей.",
    },
    needValid: "Пожалуйста, укажите допустимое поле версии Swagger или OpenAPI.",
    supported: {
      1: "Поддерживаемые поля версии: ",
      2: " и те, которые соответствуют ",
      3: " (например, ",
      4: ").",
    },
  },
  versions: {
    "oas3": "OAS3",
  },
  xpane: {
    hideEditor: "Скрыть редактор",
    showEditor: "Показать редактор",
    format: "Отформатировать содержимое",
    overview: "Обзор",
  },
}
